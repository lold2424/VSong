name: VSong CI/CD to OCI

on:
  push:
    branches:
      - main
      - deploy

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build Frontend
        working-directory: ./src/front
        run: |
          npm install
          npm run build

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Backend with Gradle
        run: ./gradlew build -x test

      - name: Package Artifacts
        run: |
          mkdir -p artifacts/frontend artifacts/backend
          cp -r ./src/front/build/* artifacts/frontend/
          find ./build/libs/ -name "*.jar" ! -name "*-plain.jar" -exec cp {} artifacts/backend/ \;

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: v-song-build
          path: artifacts/

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: v-song-build
          path: ./v-song-build

      - name: Deploy Application
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DRIVER_CLASS_NAME: ${{ secrets.DB_DRIVER_CLASS_NAME }}
          YOUTUBE_API_KEYS: ${{ secrets.YOUTUBE_API_KEYS }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          BASE_URL: ${{ secrets.BASE_URL }}
          MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: ${{ secrets.MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE }}
          MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: ${{ secrets.MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS }}
        run: |
          echo "Starting deployment..."
          
          sudo mkdir -p /home/opc/vsong/
          sudo chown -R opc:opc /home/opc/vsong/
          sudo chmod o+x /home/opc
          sudo chmod o+x /home/opc/vsong/
          
          sudo rm -rf /var/www/v-song/*
          sudo cp -R ./v-song-build/frontend/* /var/www/v-song/

          PROPERTIES_FILE="/home/opc/vsong/application.properties"
          echo "Creating $PROPERTIES_FILE..."
          
          echo "spring.datasource.url=$DB_URL" | sudo tee $PROPERTIES_FILE
          echo "spring.datasource.username=$DB_USERNAME" | sudo tee -a $PROPERTIES_FILE
          echo "spring.datasource.password=$DB_PASSWORD" | sudo tee -a $PROPERTIES_FILE
          echo "spring.datasource.driver-class-name=$DB_DRIVER_CLASS_NAME" | sudo tee -a $PROPERTIES_FILE
          echo "youtube.api.keys=$YOUTUBE_API_KEYS" | sudo tee -a $PROPERTIES_FILE
          echo "spring.security.oauth2.client.registration.google.client-id=$GOOGLE_CLIENT_ID" | sudo tee -a $PROPERTIES_FILE
          echo "spring.security.oauth2.client.registration.google.client-secret=$GOOGLE_CLIENT_SECRET" | sudo tee -a $PROPERTIES_FILE
          echo "baseUrl=$BASE_URL" | sudo tee -a $PROPERTIES_FILE
          echo "spring.security.oauth2.client.registration.google.scope=profile,email,https://www.googleapis.com/auth/youtube.readonly" | sudo tee -a $PROPERTIES_FILE
          echo "spring.security.oauth2.client.registration.google.redirect-uri=\${baseUrl}/login/oauth2/code/google" | sudo tee -a $PROPERTIES_FILE
          echo "spring.security.oauth2.client.registration.google.client-name=Google" | sudo tee -a $PROPERTIES_FILE
          echo "spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth" | sudo tee -a $PROPERTIES_FILE
          echo "spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token" | sudo tee -a $PROPERTIES_FILE
          echo "spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo" | sudo tee -a $PROPERTIES_FILE
          echo "spring.security.oauth2.client.provider.google.user-name-attribute=sub" | sudo tee -a $PROPERTIES_FILE
          echo "server.port=8080" | sudo tee -a $PROPERTIES_FILE
          echo "spring.jpa.hibernate.ddl-auto=update" | sudo tee -a $PROPERTIES_FILE
          echo "spring.jackson.time-zone=Asia/Seoul" | sudo tee -a $PROPERTIES_FILE
          echo "spring.task.scheduling.enabled=true" | sudo tee -a $PROPERTIES_FILE
          # Actuator 관련 설정 추가
          echo "management.endpoints.web.exposure.include=$MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE" | sudo tee -a $PROPERTIES_FILE
          echo "management.endpoint.health.show-details=$MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS" | sudo tee -a $PROPERTIES_FILE

          JAR_SOURCE_FILE=$(find ./v-song-build/backend/ -name "*.jar")
          JAR_DEST_PATH="/home/opc/vsong/VSong.jar"
          echo "Deploying $JAR_SOURCE_FILE to $JAR_DEST_PATH..."
          sudo cp $JAR_SOURCE_FILE $JAR_DEST_PATH

          echo "Restarting VSong service..."
          sudo systemctl restart vsong

          echo "Deployment finished."